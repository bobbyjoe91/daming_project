install.packages("Deriv")
install.packages("caret")
install.packages("fpc")
install.packages("fpc")
install.packages("fpc")
library("cli", lib.loc="~/R/win-library/3.5")
detach("package:cli", unload=TRUE)
remove.packages("cli", lib="~/R/win-library/3.5")
library("colorspace", lib.loc="~/R/win-library/3.5")
detach("package:colorspace", unload=TRUE)
library("crayon", lib.loc="~/R/win-library/3.5")
detach("package:crayon", unload=TRUE)
library("DEoptimR", lib.loc="~/R/win-library/3.5")
detach("package:DEoptimR", unload=TRUE)
library("Deriv", lib.loc="~/R/win-library/3.5")
detach("package:Deriv", unload=TRUE)
library("diptest", lib.loc="~/R/win-library/3.5")
detach("package:diptest", unload=TRUE)
library("fansi", lib.loc="~/R/win-library/3.5")
detach("package:fansi", unload=TRUE)
library("flexmix", lib.loc="~/R/win-library/3.5")
detach("package:flexmix", unload=TRUE)
library("flexmix", lib.loc="~/R/win-library/3.5")
detach("package:flexmix", unload=TRUE)
library("glue", lib.loc="~/R/win-library/3.5")
detach("package:glue", unload=TRUE)
library("labeling", lib.loc="~/R/win-library/3.5")
detach("package:labeling", unload=TRUE)
library("lava", lib.loc="~/R/win-library/3.5")
detach("package:lava", unload=TRUE)
library("modeltools", lib.loc="~/R/win-library/3.5")
detach("package:modeltools", unload=TRUE)
library("munsell", lib.loc="~/R/win-library/3.5")
detach("package:munsell", unload=TRUE)
library("mvtnorm", lib.loc="~/R/win-library/3.5")
detach("package:mvtnorm", unload=TRUE)
library("numDeriv", lib.loc="~/R/win-library/3.5")
detach("package:numDeriv", unload=TRUE)
library("pillar", lib.loc="~/R/win-library/3.5")
detach("package:pillar", unload=TRUE)
remove.packages("pillar", lib="~/R/win-library/3.5")
library("pkgconfig", lib.loc="~/R/win-library/3.5")
detach("package:pkgconfig", unload=TRUE)
library("prabclus", lib.loc="~/R/win-library/3.5")
detach("package:prabclus", unload=TRUE)
remove.packages("prabclus", lib="~/R/win-library/3.5")
library("R6", lib.loc="~/R/win-library/3.5")
detach("package:R6", unload=TRUE)
library("RColorBrewer", lib.loc="~/R/win-library/3.5")
detach("package:RColorBrewer", unload=TRUE)
library("robustbase", lib.loc="~/R/win-library/3.5")
detach("package:robustbase", unload=TRUE)
library("SQUAREM", lib.loc="~/R/win-library/3.5")
detach("package:SQUAREM", unload=TRUE)
library("utf8", lib.loc="~/R/win-library/3.5")
detach("package:utf8", unload=TRUE)
install.packages("caret")
install.packages("fpc")
setwd("S:/kuliah/daming_project")
# PEMBACAAN DATA
setwd("S:/kuliah/daming_project")
data_set <- read.csv("train.csv", header = TRUE, sep = ",")
mobile_price <- data.frame(data_set)
View(mobile_price)
# PRAPROSES
price_range <- c(0,1,2,3)
col_order <- c(2,4,6,18:20,1,3,5,7:17,21)
mobile_price <- mobile_price[with(mobile_price, order(price_range)), ]
mobile_price <- mobile_price[,col_order]
## kategorisasi kolom 1-6 dan kelas
mobile_price$blue <- as.factor(mobile_price$blue)
mobile_price$dual_sim <- as.factor(mobile_price$dual_sim)
mobile_price$four_g <- as.factor(mobile_price$four_g)
mobile_price$three_g <- as.factor(mobile_price$three_g)
mobile_price$touch_screen <- as.factor(mobile_price$touch_screen)
mobile_price$wifi <- as.factor(mobile_price$wifi)
mobile_price$price_range <- as.factor(mobile_price$price_range)
summary(mobile_price)
View(mobile_price)
install.packages("svm")
install.packages("e1071")
install.packages("rpart")
library("e1071", lib.loc="~/R/win-library/3.5")
detach("package:e1071", unload=TRUE)
View(mobile_price)
#binning
battery_power <- mobile_price$battery_power
battery_power
install.packages("infotheo")
library("infotheo", lib.loc="~/R/win-library/3.5")
discretize(battery_power, "equalWidth", 10)
discretize(battery_power, "equalwidth", 10)
x <- discretize(battery_power, "equalwidth", 10)
x
x[0]
x[0,1]
x[0,]
x[1,]
x[1,1]
x[1,2]
x[1,]
battery_power[0]
battery_power[0,]
battery_power[0,1]
battery_power[1]
battery_power[1,]
battery_power[2]
battery_power[735]
nrow(mobile_price)
max(battery_power)
min(battery_power)
max(battery_power)-min(battery_power)
x <- discretize(battery_power, "equalfreq", 15)
x
mobile_price$battery_power <- battery_power
View(mobile_price)
x <- discretize(battery_power, "equalfreq", 15)
mobile_price$battery_power <- x
View(mobile_price)
mobile_price$battery_power
mobile_price$wifi
# PEMBACAAN DATA
setwd("S:/kuliah/daming_project")
data_set <- read.csv("train.csv", header = TRUE, sep = ",")
mobile_price <- data.frame(data_set)
# PRAPROSES
price_range <- c(0,1,2,3)
col_order <- c(2,4,6,18:20,1,3,5,7:17,21)
mobile_price <- mobile_price[with(mobile_price, order(price_range)), ]
mobile_price <- mobile_price[,col_order]
mobile_price$blue <- as.factor(mobile_price$blue)
mobile_price$dual_sim <- as.factor(mobile_price$dual_sim)
mobile_price$four_g <- as.factor(mobile_price$four_g)
mobile_price$three_g <- as.factor(mobile_price$three_g)
mobile_price$touch_screen <- as.factor(mobile_price$touch_screen)
mobile_price$wifi <- as.factor(mobile_price$wifi)
mobile_price$price_range <- as.factor(mobile_price$price_range)
summary(mobile_price)
View(mobile_price)
categorized <- mobile_price
summary(categorized)
View(categorized)
#binning
library(infotheo)
categorized$battery_power <- discretize(mobile_price$battery_power, "equalfreq", 15)
View(categorized)
categorized$battery_power
as.vector(categorized$battery_power)
type(categorized$blue)
class(categorized$blue)
type(categorized$blue)
categorized$blue
categorized <- mobile_price
summary(categorized)
View(categorized)
binned <- categorized
binned <- categorized
binned$battery_power <- cut(mobile_price$battery_power, 15, include.lowest = TRUE)
View(binned)
plot(binned$battery_power)
max(binned$clock_speed)-min(binned$clock_speed)
max(binned$clock_speed)#-min(binned$clock_speed)
min(binned$clock_speed)
binned$clock_speed <- cut(mobile_price$clock_speed, 5, include.lowest = TRUE)
View(binned)
plot(binned$clock_speed)
min(fc)
min(binned$fc)
max(binned$fc)
binned$fc <- cut(mobile_price$fc, 5, include.lowest = TRUE) #
View(binned)
plot(binned$fc)
max(binned$int_memory)
min(binned$int_memory)
binned$int_memory <- cut(mobile_price$int_memory, 6, include.lowest = TRUE)
plot(binned$int_memory)
binned$int_memory <- cut(mobile_price$int_memory, 10, include.lowest = TRUE)
plot(binned$int_memory)
View(binned)
min(binned$int_memory)
binned$int_memory
binned$m_dep <- cut(mobile_price$m_dep, 5, include.lowest = TRUE) #
plot(binned$m_dep)
min(binned$mobile_wt)
max(binned$mobile_wt)
binned$m_dep <- cut(mobile_price$m_dep, 10, include.lowest = TRUE) #
plot(binned$m_dep)
binned$m_dep <- cut(mobile_price$m_dep, 5, include.lowest = TRUE) #
plot(binned$m_dep)
binned$mobile_wt <- cut(mobile_price$mobile_wt, 10, include.lowest = TRUE)
plot(binned$mobile_wt)
max(binned$mobile_wt)
max(mobile_price$mobile_wt)
max(binned$n_cores)
min(binned$n_cores)
binned$n_cores <- cut(mobile_price$n_cores, 4, include.lowest = TRUE)
plot(binned$n_cores)
min(binned$pc)
max(binned$pc)
binned$pc <- cut(mobile_price$pc, 5, include.lowest = TRUE)
plot(binned$pc)
View(binned)
max(binned$px_height)
min(binned$px_height)
binned[binned$px_height == 0]
mobile_price[mobile_price$px_height == 0]
mobile_price[mobile_price$px_height == 0,]
mobile_price[mobile_price$px_width == 0,]
mobile_price[mobile_price$m_dep == 0,]
mobile_price[mobile_price$talk_time == 0,]
mobile_price[mobile_price$px_height == 0,]
min(binned$px_width)
max(binned$px_width)
binned$px_width <- cut(mobile_price$px_width, 10, include.lowest = TRUE)
plot(binned$px_width)
max(binned$ram)
min(binned$ram)
binned$ram <- cut(mobile_price$ram, 20, include.lowest = TRUE)
plot(binned$ram)
binned$ram <- cut(mobile_price$ram, 10, include.lowest = TRUE)
plot(binned$ram)
min(binned$sc_h)
max(binned$sc_h)
binned$sc_h <- cut(mobile_price$sc_h, 5, include.lowest = TRUE)
plot(binned$sc_h)
max(binned$sc_w)
min(binned$sc_w)
min(binned$talk_time)
max(binned$talk_time)
binned$talk_time <- cut(mobile_price$talk_time, 6, include.lowest = TRUE)
plot(binned$talk_time)
View(binned)
